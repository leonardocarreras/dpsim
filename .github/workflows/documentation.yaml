name: Build & Deploy Documentation

on:
  push:
    branches:
      - master

  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:

jobs:
  generate-reference:
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create Build Environment
      run: mkdir build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE

    - name: Make reference docs
      run: |
        make --jobs $(nproc) -C build docs
        make --jobs $(nproc) -C build docs_cxx

    - name: Copy reference
      run: |
        mkdir reference
        cp -r build/docs/sphinx/html/. reference/sphinx
        cp -r build/docs/doxygen/html/. reference/doxygen

    - name: Archive reference directory
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}/reference
        name: reference-cache
        retention-days: 1

  prepare:
    runs-on: ubuntu-latest
    needs: [generate-reference]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: '0.108.0'
        extended: true

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - run: cd docs/hugo && npm ci
    - run: cd docs/hugo && hugo --minify

    - name: Restore reference archive
      uses: actions/download-artifact@v4
      with:
       name: reference-cache
       path: ${{ github.workspace }}/reference

    - name: Copy docs
      run: |
        cp -r reference/. public
        cp -r docs/hugo/public/. public

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  deploy-pages:
    runs-on: ubuntu-latest
    needs: prepare

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
